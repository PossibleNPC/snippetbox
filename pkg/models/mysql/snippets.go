package mysql

import (
	"database/sql"
	"errors"
	"github.com/PossibleNPC/snippetbox/pkg/models"
)

type SnippetModel struct {
	DB *sql.DB
}

func (m *SnippetModel) Insert(title, content, expires string) (int, error) {
	stmt := `insert into snippetbox.snippets (title, content, created, expires) 
			 values (?, ?, utc_timestamp(), date_add(utc_timestamp(), interval ? day))`

	// DB.Exec() returns a Result (interface that contains LastInsertId() and RowsAffected())
	result, err := m.DB.Exec(stmt, title, content, expires)
	if err != nil {
		// The reason we're returning here is that we assume the Exec on the Insert fails, so no records are changed
		return 0, err
	}

	// Returns integer generated by the database in response to a command; in this case, INSERT
	id, err := result.LastInsertId()
	if err != nil {
		return 0, err
	}

	return int(id), nil
}

func (m *SnippetModel) Get(id int) (*models.Snippet, error) {
	stmt := `select id, title, content, created, expires from snippets
			 where expires > utc_timestamp() and id = ?`

	row := m.DB.QueryRow(stmt, id)

	s := &models.Snippet{}

	err := row.Scan(&s.ID, &s.Title, &s.Content, &s.Created, &s.Expires)
	if err != nil {
		if errors.Is(err, sql.ErrNoRows) {
			return nil, models.ErrNoRecord
		} else {
			return nil, err
		}
	}

	return s, nil
}

func (m *SnippetModel) Latest() ([]*models.Snippet, error) {
	stmt := `select id, title, content, created, expires from snippets
			 where expires > utc_timestamp() order by created desc limit 10`

	rows, err := m.DB.Query(stmt)
	if err != nil {
		return nil, err
	}

	// This defer call will execute when the parent function ends execution
	// It is a good practice to properly manage the lifecycle of resources and connections with defer, but there are
	// gotchas to pay attention to.
	defer rows.Close()

	snippets := []*models.Snippet{}

	for rows.Next() {
		s := &models.Snippet{}

		err = rows.Scan(&s.ID, &s.Title, &s.Content, &s.Created, &s.Expires)
		if err != nil {
			return nil, err
		}

		snippets = append(snippets, s)
	}

	if err = rows.Err(); err != nil {
		return nil, err
	}

	return snippets, nil
}